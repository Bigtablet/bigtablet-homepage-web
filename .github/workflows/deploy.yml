
name: Release CI/CD using GitHub Actions & Docker
on:
  push:
    tags:
      - '*'
jobs:
  release:
    runs-on: ubuntu-latest
    env:
      IMAGE: ${{ secrets.DOCKER_USERNAME }}/bigtablet-homepage-web
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Extract tag version
        id: version
        run: |
          RAW_TAG="${GITHUB_REF_NAME}"
          CLEAN_TAG="${RAW_TAG#v}"
          echo "tag=$CLEAN_TAG" >> $GITHUB_OUTPUT
      - name: Print version
        run: |
          echo "Using release tag: ${{ steps.version.outputs.tag }}"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build & Push image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ${{ env.IMAGE }}:${{ steps.version.outputs.tag }}
          build-args: |
            NEXT_PUBLIC_SERVER_URL=${{ secrets.NEXT_PUBLIC_SERVER_URL }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
          sbom: false
      - name: Deploy to prod (SSH)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_PROD }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          envs: IMAGE
          script: |
            set -euo pipefail
            VERSION='${{ steps.version.outputs.tag }}'
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            docker pull "$IMAGE:$VERSION"
            docker rm -f bigtablet-homepage-web 2>/dev/null || true
            docker run -d \
            --name bigtablet-homepage-web \
            --restart unless-stopped \
            -p 127.0.0.1:8080:80 \
            "$IMAGE:$VERSION"

